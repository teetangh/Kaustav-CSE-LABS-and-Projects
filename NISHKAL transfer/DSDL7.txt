module q1b(a, b, c, d, f);
input a, b, c, d;
output f;
reg f;
case({a,b})
0:f = (~d|c);
1:f = d;
2:f = 1'b0;
3:f = 1'b0;
endcase
endmodule

module q2a(a, b, c, f); 
input a, b, c;
output f;
always@(a|b|c)
begin
case(a)
0: f = b&c;
1: f = b|c;
endcase
end
endmodule

module q2b(a, b, c, f); //take mux21 from lab 6, q1
input a, b, c;
output f;
wire x; wire y;
mux21 stage0(0, c, b, x);
mux21 stage1(c, 1, b, y);
mux21 stage2(x, y, a, f);
endmodule

module bintogray(B, G); /take mux41_q1 from lab 6, q1
input [3:0]B;
output [3:0]G;
assign G[3] = B[3];
assign G[0] = B[1]^B[0];
wire [3:0]K1, K2;
assign K1 = {1'b0, 1'b1, 1'b1, 1'b0};
assign K2 = {B[1], ~B[1], B[1], ~B[1]};
mux41_q1 s0(K1, B[3:2], G[2]);
mux41_q1 s1{K2, B[3:2], G[1]);
endmodule