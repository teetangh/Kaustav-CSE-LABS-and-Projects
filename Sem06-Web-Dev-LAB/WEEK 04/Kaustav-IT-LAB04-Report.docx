Q1
#!/usr/bin/env python3

class Solution:  
    def f1(self, s1):  
        return self.f2([], sorted(s1))  
 
    def f2(self, curr, s1):  
        if s1:  
            return self.f2(curr, s1[1:]) + self.f2(curr + [s1[0]], s1[1:])  
        return [curr]  

elements_list = [int(x) for x in input().split()]

subset_solution = Solution()
print("Subsets: ")
for ele in subset_solution.f1(elements_list): 
    print(ele)#!/usr/bin/env python3

Q2
class Solution:
    
    def target_number(self , array  , target):
        i = 0
        j = 1
        for i in range(len(array)-2):            
            for j in range(len(array)-1):            
                if array[i] + array[j] == target:
                    return i+1,j+1


    
if __name__ == "__main__":
    sol = Solution()
    array = [int(x) for x in input("Enter the array elements: ").split()]
    target = int(input("Enter the target: "))

    answer = sol.target_number(array,target)
    print(answer)#!/usr/bin/env python3

Q3
class Solution:
	def power(self,x,n):
		if  x == 0 or x==1 or n==0:
			return x
		elif n < 0:
			return 1 / self.power(x,-n)
		else: 
			return x * self.power(x,n-1)

if __name__ == "__main__":
	sol = Solution()
	x = int(input("Enter x: "))
	n = int(input("Enter n: "))
	answer = sol.power(x,n)
	print(answer)
#!/usr/bin/env python3

Q4
class Solution:

    def get_string(self):
        self.q4_string = str(input("Enter the string: "))

    def print_string(self):
        print(self.q4_string.upper())

if __name__ == "__main__":
    sol = Solution()

    sol.get_string()
    sol.print_string()
